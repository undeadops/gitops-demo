version: 2

main_only: &main_only
  filters:
    branches:
      only: main 

tagged_release: &tagged_release
  filters:
    tags:
      only: /\d+(\.\d+)(\.\d+)/

jobs:
  build:
    docker:
      - image: golang:1.16-alpine
    steps:
      - checkout
      - restore_cache:
          key: v1-app-{{ checksum "go.mod" }}
      - run:
          name: Env Vars
          command: env 
      - run:
          name: Download Dependancies
          command: go mod download
      - save_cache:
          key: v1-app-{{ checksum "go.mod" }}
          paths: 
            - "/go/pkg/mod"
      - run:
          name: Build
          command: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${CIRCLE_SHA1::8}" -o demo-http  *.go
      - persist_to_workspace:
          root: /root/
          paths:
            - project

  test:
    docker:
      - image: golang:1.16-alpine
    steps:
      - checkout
      - restore_cache:
          key: v1-app-{{ checksum "go.mod" }}
      - run:
          name: Run Tests
          command: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -v ./...

  publish:
    docker:
      - image: docker:stable
    environment:
      IMAGE: quay.io/undeadops/demo-http
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /root
      - store_artifacts:
          path: ./demo-http
          destination: demo-http.main
      - run:
          name: Log in to docker hub
          command: docker login -u $REGISTRY_USER --password "$REGISTRY_PASSWORD" quay.io
      - run:
          name: Build and Push Docker Container 
          command: |
            TS=`date +%F.%H%M%S`
            TAG=${CIRCLE_BRANCH}-${TS}-${CIRCLE_SHA1::8}
            docker build --build-arg VERSION=${CIRCLE_SHA1::8} -f Dockerfile -t $IMAGE:$TAG .
            docker push $IMAGE:$TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          <<: *main_only
          requires:
            - test
